// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite" // ou "postgresql" selon ton choix
  url      = env("DATABASE_URL")
}

model Game {
  id          String        @id @default(cuid())
  fen         String
  moves       Move[] // relation 1:N
  players     Player[]      @relation("GamePlayers") // 2 joueurs max par partie
  createdAt   DateTime      @default(now())
  Matchmaking Matchmaking[]
}

model Move {
  id        String   @id @default(cuid())
  notation  String // exemple : e4, Nf3, etc.
  fenAfter  String // état du board après ce coup
  game      Game     @relation(fields: [gameId], references: [id])
  gameId    String
  playedBy  Player?  @relation(fields: [playerId], references: [id])
  playerId  String?
  createdAt DateTime @default(now())
}

model Player {
  id        String   @id @default(cuid())
  username  String   @unique
  games     Game[]   @relation("GamePlayers")
  moves     Move[]
  stats     Stats?
  createdAt DateTime @default(now())

  // Relations avec Matchmaking
  matchmakingsAsPlayer1 Matchmaking[] @relation("Player1")
  matchmakingsAsPlayer2 Matchmaking[] @relation("Player2")
}

model Stats {
  id       String @id @default(cuid())
  wins     Int    @default(0)
  losses   Int    @default(0)
  draws    Int    @default(0)
  player   Player @relation(fields: [playerId], references: [id])
  playerId String @unique
}

model Matchmaking {
  id        String   @id @default(cuid())
  player1   Player   @relation("Player1", fields: [player1Id], references: [id])
  player1Id String
  player2   Player?  @relation("Player2", fields: [player2Id], references: [id])
  player2Id String?
  game      Game?    @relation(fields: [gameId], references: [id])
  gameId    String?
  createdAt DateTime @default(now())
  status    String // example: "waiting", "matched"
}
